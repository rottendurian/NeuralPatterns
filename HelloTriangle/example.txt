// void shader::setBool(const std::string& name, bool value) const
// {
//     glUniform1i(glGetUniformLocation(shader_program, name.c_str()), (int)value);
// }
// // ------------------------------------------------------------------------
// void shader::setInt(const std::string& name, int value) const
// {
//     glUniform1i(glGetUniformLocation(shader_program, name.c_str()), value);
// }
// // ------------------------------------------------------------------------
// void shader::setFloat(const std::string& name, float value) const
// {
//     glUniform1f(glGetUniformLocation(shader_program, name.c_str()), value);
// }
// // ------------------------------------------------------------------------
// void shader::setVec2(const std::string& name, const glm::vec2& value) const
// {
//     glUniform2fv(glGetUniformLocation(shader_program, name.c_str()), 1, &value[0]);
// }
// void shader::setVec2(const std::string& name, float x, float y) const
// {
//     glUniform2f(glGetUniformLocation(shader_program, name.c_str()), x, y);
// }
// // ------------------------------------------------------------------------
// void shader::setVec3(const std::string& name, const glm::vec3& value) const
// {
//     glUniform3fv(glGetUniformLocation(shader_program, name.c_str()), 1, &value[0]);
// }
// void shader::setVec3(const std::string& name, float x, float y, float z) const
// {
//     glUniform3f(glGetUniformLocation(shader_program, name.c_str()), x, y, z);
// }
// // ------------------------------------------------------------------------
// void shader::setVec4(const std::string& name, const glm::vec4& value) const
// {
//     glUniform4fv(glGetUniformLocation(shader_program, name.c_str()), 1, &value[0]);
// }
// void shader::setVec4(const std::string& name, float x, float y, float z, float w)
// {
//     glUniform4f(glGetUniformLocation(shader_program, name.c_str()), x, y, z, w);
// }
// // ------------------------------------------------------------------------
// void shader::setMat2(const std::string& name, const glm::mat2& mat) const
// {
//     glUniformMatrix2fv(glGetUniformLocation(shader_program, name.c_str()), 1, GL_FALSE, &mat[0][0]);
// }
// // ------------------------------------------------------------------------
// void shader::setMat3(const std::string& name, const glm::mat3& mat) const
// {
//     glUniformMatrix3fv(glGetUniformLocation(shader_program, name.c_str()), 1, GL_FALSE, &mat[0][0]);
// }
// // ------------------------------------------------------------------------
// void shader::setMat4(const std::string& name, const glm::mat4& mat) const
// {
//     glUniformMatrix4fv(glGetUniformLocation(shader_program, name.c_str()), 1, GL_FALSE, &mat[0][0]);
// }